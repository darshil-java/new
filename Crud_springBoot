CarController:...
package com.example.demo.Controller;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.example.demo.model.Car;
import com.example.demo.repository.CarRepository;

@Controller
public class CarController {
	@Autowired
	CarRepository cars;
	
	@GetMapping("/")
	public String addCar()
	{		
		return "add";
	}	
	
	@PostMapping("/cars/add")
	public String addCar(Car car)
	{
		cars.save(car);
		return "redirect:/cars/display";
	}
	
	
	
	@GetMapping("/cars/display")
	public String displayCar(Model model)
	{	
		List<Car> car_list=(List<Car>)cars.findAll();
		model.addAttribute("cars",car_list);
		return "display";
	}
	
	@GetMapping("/cars/delete/{id}")
	public String deleteCar(@PathVariable("id")Integer id)
	{	
		cars.deleteById(id);
		return "redirect:/cars/display";
		
	}
	
	@GetMapping("/cars/edit/{id}")
	public String editCar(@PathVariable("id")Integer id, Model model)
	{	
		Car car =	cars.findById(id).get();
		
		model.addAttribute("car",car);
		return "edit";
	}
	@PostMapping("/cars/edit")
	public String editCar(Car car)
	{	
		Integer id=car.getId();
		String brand=car.getBrand();
		String model1=car.getModel1();
		String price=car.getPrice();
		Car carDB =	cars.findById(id).get();
		
		carDB.setBrand(brand);
		carDB.setModel1(model1);
		carDB.setPrice(price);
		
		cars.save(carDB);
		
//		model.addAttribute("car",car);
		
		return "redirect:/cars/display";
	}
}


Model:-Car:...
package com.example.demo.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

@Entity
public class Car {
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Integer id;
	private String brand;
	private String model1;
	private String price;
	
	public Integer getId() {
		return id;
	}
	public void setId(Integer id) {
		this.id = id;
	}
	public String getBrand() {
		return brand;
	}
	public void setBrand(String brand) {
		this.brand = brand;
	}
	public String getModel1() {
		return model1;
	}
	public void setModel1(String model1) {
		this.model1 = model1;
	}
	public String getPrice() {
		return price;
	}
	public void setPrice(String price) {
		this.price = price;
	}
	
}


Repository:..CarRepository:...

package com.example.demo.repository;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.example.demo.model.Car;

@Repository
public interface CarRepository extends JpaRepository<Car, Integer>{

}



add.html:

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<form action="/cars/add" method="post">
	<p>Brand:<input type="text" name="brand"></p>
	<p>Model:<input type="text" name="model1"></p>
	<p>Price:<input type="text" name="price"></p>
	<button type="submit">Add Car</button>
	</form>
</body>
</html>

Display.html:.....
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<table>
		<tr>
			<th>ID</th>
			<th>Brand</th>
			<th>Model</th>
			<th>Price</th>	
			<th>Actions</th>
		</tr>
		<tr th:each="car:${cars}">
			<td th:text="${car.id}"></td>
			<td th:text="${car.brand}"></td>
			<td th:text="${car.model1}"></td>
			<td th:text="${car.price}"></td>
			<td>
				<a th:href="@{/cars/delete/{id}(id=${car.id})}">Delete</a>
			</td>
			<td>
				<a th:href="@{/cars/edit/{id}(id=${car.id})}">Edit</a>
			</td>
		</tr>
	</table>
</body>
</html>



edit.html:
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<form action="/cars/edit" method="post">
	<input type="hidden" name="id" th:value="${car.id}">
	<p>Brand:<input type="text" name="brand" th:value="${car.brand}"></p>
	<p>Model:<input type="text" name="model1" th:value="${car.model1}" ></p>
	<p>Price:<input type="text" name="price" th:value="${car.price}"></p>
	<button type="submit">Edit Car</button>
	</form>
</body>
</html>


properties:...

spring.application.name=CarCrud-3
spring.datasource.url=jdbc:mysql://localhost/user        ////jdbc:mysql//128.66.203.247:3306/exam1
spring.datasource.username=root
spring.datasource.password=sharvil123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update







